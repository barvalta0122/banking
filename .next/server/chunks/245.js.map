{"version":3,"file":"245.js","mappings":"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","sources":["webpack://jsm_banking/./node_modules/@opentelemetry/instrumentation/build/esm/platform/node/ sync","webpack://jsm_banking/app/layout.tsx","webpack://jsm_banking/sentry-wrapper-module","webpack://jsm_banking/","webpack://jsm_banking/?c7f4","webpack://jsm_banking/./app/global-error.jsx","webpack://jsm_banking/./components/PlaidLink.tsx","webpack://jsm_banking/./components/ui/button.tsx","webpack://jsm_banking/./lib/utils.ts"],"sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 14464;\nmodule.exports = webpackEmptyContext;","export const dynamic = 'force-dynamic'\n\nimport type { Metadata } from \"next\";\nimport { Inter, IBM_Plex_Serif } from \"next/font/google\";\nimport \"./globals.css\";\n\nconst inter = Inter({ subsets: [\"latin\"], variable: '--font-inter' });\nconst ibmPlexSerif = IBM_Plex_Serif({\n  subsets: ['latin'],\n  weight: ['400', '700'],\n  variable: '--font-ibm-plex-serif'\n})\n\nexport const metadata: Metadata = {\n  title: \"Horizon\",\n  description: \"Horizon is a modern banking platform for everyone.\",\n  icons: {\n    icon: '/icons/logo.svg'\n  }\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body className={`${inter.variable} ${ibmPlexSerif.variable}`}>{children}</body>\n    </html>\n  );\n}\n","import { _nullishCoalesce, _optionalChain } from '@sentry/utils';\nimport * as Sentry from '@sentry/nextjs';\nimport { requestAsyncStorage } from 'next/dist/client/components/request-async-storage.external.js';\nimport * as serverComponentModule from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\nexport * from '__SENTRY_WRAPPING_TARGET_FILE__.cjs';\n\nconst serverComponent = serverComponentModule.default;\n\nlet wrappedServerComponent;\nif (typeof serverComponent === 'function') {\n  // For some odd Next.js magic reason, `headers()` will not work if used inside `wrapServerComponentsWithSentry`.\n  // Current assumption is that Next.js applies some loader magic to userfiles, but not files in node_modules. This file\n  // is technically a userfile so it gets the loader magic applied.\n  wrappedServerComponent = new Proxy(serverComponent, {\n    apply: (originalFunction, thisArg, args) => {\n      let sentryTraceHeader = undefined;\n      let baggageHeader = undefined;\n      let headers = undefined;\n\n      // We try-catch here just in `requestAsyncStorage` is undefined since it may not be defined\n      try {\n        const requestAsyncStore = requestAsyncStorage.getStore();\n        sentryTraceHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _ => _.headers, 'access', _2 => _2.get, 'call', _3 => _3('sentry-trace')]), () => ( undefined));\n        baggageHeader = _nullishCoalesce(_optionalChain([requestAsyncStore, 'optionalAccess', _4 => _4.headers, 'access', _5 => _5.get, 'call', _6 => _6('baggage')]), () => ( undefined));\n        headers = _optionalChain([requestAsyncStore, 'optionalAccess', _7 => _7.headers]);\n      } catch (e) {\n        /** empty */\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n      return Sentry.wrapServerComponentWithSentry(originalFunction , {\n        componentRoute: '/',\n        componentType: 'Layout',\n        sentryTraceHeader,\n        baggageHeader,\n        headers,\n      }).apply(thisArg, args);\n    },\n  });\n} else {\n  wrappedServerComponent = serverComponent;\n}\n\nconst generateMetadata = serverComponentModule.generateMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateMetadata, {\n      componentRoute: '/',\n      componentType: 'Layout',\n      generationFunctionIdentifier: 'generateMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateImageMetadata = serverComponentModule.generateImageMetadata\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateImageMetadata, {\n      componentRoute: '/',\n      componentType: 'Layout',\n      generationFunctionIdentifier: 'generateImageMetadata',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst generateViewport = serverComponentModule.generateViewport\n  ? Sentry.wrapGenerationFunctionWithSentry(serverComponentModule.generateViewport, {\n      componentRoute: '/',\n      componentType: 'Layout',\n      generationFunctionIdentifier: 'generateViewport',\n      requestAsyncStorage,\n    })\n  : undefined;\n\nconst wrappedServerComponent$1 = wrappedServerComponent;\n\nexport { wrappedServerComponent$1 as default, generateImageMetadata, generateMetadata, generateViewport };\n","import(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/app/global-error.jsx\");\n","import(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/app-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/client-page.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/error-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/layout-router.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/not-found-boundary.js\");\n;\nimport(/* webpackMode: \"eager\" */ \"/Users/prathambarvalta/Desktop/horizon/node_modules/next/dist/client/components/render-from-template-context.js\");\n","\"use client\";\n\nimport * as Sentry from \"@sentry/nextjs\";\nimport Error from \"next/error\";\nimport { useEffect } from \"react\";\n\nexport default function GlobalError({ error }) {\n  useEffect(() => {\n    Sentry.captureException(error);\n  }, [error]);\n\n  return (\n    <html>\n      <body>\n        <Error />\n      </body>\n    </html>\n  );\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Button } from './ui/button'\nimport { PlaidLinkOnSuccess, PlaidLinkOptions, usePlaidLink } from 'react-plaid-link'\nimport { useRouter } from 'next/navigation';\nimport { createLinkToken, exchangePublicToken } from '@/lib/actions/user.actions';\nimport Image from 'next/image';\n\nconst PlaidLink = ({ user, variant }: PlaidLinkProps) => {\n  const router = useRouter();\n\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    const getLinkToken = async () => {\n      const data = await createLinkToken(user);\n\n      setToken(data?.linkToken);\n    }\n\n    getLinkToken();\n  }, [user]);\n\n  const onSuccess = useCallback<PlaidLinkOnSuccess>(async (public_token: string) => {\n    await exchangePublicToken({\n      publicToken: public_token,\n      user,\n    })\n\n    router.push('/');\n  }, [user])\n  \n  const config: PlaidLinkOptions = {\n    token,\n    onSuccess\n  }\n\n  const { open, ready } = usePlaidLink(config);\n  \n  return (\n    <>\n      {variant === 'primary' ? (\n        <Button\n          onClick={() => open()}\n          disabled={!ready}\n          className=\"plaidlink-primary\"\n        >\n          Connect bank\n        </Button>\n      ): variant === 'ghost' ? (\n        <Button onClick={() => open()} variant=\"ghost\" className=\"plaidlink-ghost\">\n          <Image \n            src=\"/icons/connect-bank.svg\"\n            alt=\"connect bank\"\n            width={24}\n            height={24}\n          />\n          <p className='hiddenl text-[16px] font-semibold text-black-2 xl:block'>Connect bank</p>\n        </Button>\n      ): (\n        <Button onClick={() => open()} className=\"plaidlink-default\">\n          <Image \n            src=\"/icons/connect-bank.svg\"\n            alt=\"connect bank\"\n            width={24}\n            height={24}\n          />\n          <p className='text-[16px] font-semibold text-black-2'>Connect bank</p>\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default PlaidLink","import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","/* eslint-disable no-prototype-builtins */\nimport { type ClassValue, clsx } from \"clsx\";\nimport qs from \"query-string\";\nimport { twMerge } from \"tailwind-merge\";\nimport { z } from \"zod\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\n// FORMAT DATE TIME\nexport const formatDateTime = (dateString: Date) => {\n  const dateTimeOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const dateDayOptions: Intl.DateTimeFormatOptions = {\n    weekday: \"short\", // abbreviated weekday name (e.g., 'Mon')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    month: \"2-digit\", // abbreviated month name (e.g., 'Oct')\n    day: \"2-digit\", // numeric day of the month (e.g., '25')\n  };\n\n  const dateOptions: Intl.DateTimeFormatOptions = {\n    month: \"short\", // abbreviated month name (e.g., 'Oct')\n    year: \"numeric\", // numeric year (e.g., '2023')\n    day: \"numeric\", // numeric day of the month (e.g., '25')\n  };\n\n  const timeOptions: Intl.DateTimeFormatOptions = {\n    hour: \"numeric\", // numeric hour (e.g., '8')\n    minute: \"numeric\", // numeric minute (e.g., '30')\n    hour12: true, // use 12-hour clock (true) or 24-hour clock (false)\n  };\n\n  const formattedDateTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateTimeOptions\n  );\n\n  const formattedDateDay: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateDayOptions\n  );\n\n  const formattedDate: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    dateOptions\n  );\n\n  const formattedTime: string = new Date(dateString).toLocaleString(\n    \"en-US\",\n    timeOptions\n  );\n\n  return {\n    dateTime: formattedDateTime,\n    dateDay: formattedDateDay,\n    dateOnly: formattedDate,\n    timeOnly: formattedTime,\n  };\n};\n\nexport function formatAmount(amount: number): string {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2,\n  });\n\n  return formatter.format(amount);\n}\n\nexport const parseStringify = (value: any) => JSON.parse(JSON.stringify(value));\n\nexport const removeSpecialCharacters = (value: string) => {\n  return value.replace(/[^\\w\\s]/gi, \"\");\n};\n\ninterface UrlQueryParams {\n  params: string;\n  key: string;\n  value: string;\n}\n\nexport function formUrlQuery({ params, key, value }: UrlQueryParams) {\n  const currentUrl = qs.parse(params);\n\n  currentUrl[key] = value;\n\n  return qs.stringifyUrl(\n    {\n      url: window.location.pathname,\n      query: currentUrl,\n    },\n    { skipNull: true }\n  );\n}\n\nexport function getAccountTypeColors(type: AccountTypes) {\n  switch (type) {\n    case \"depository\":\n      return {\n        bg: \"bg-blue-25\",\n        lightBg: \"bg-blue-100\",\n        title: \"text-blue-900\",\n        subText: \"text-blue-700\",\n      };\n\n    case \"credit\":\n      return {\n        bg: \"bg-success-25\",\n        lightBg: \"bg-success-100\",\n        title: \"text-success-900\",\n        subText: \"text-success-700\",\n      };\n\n    default:\n      return {\n        bg: \"bg-green-25\",\n        lightBg: \"bg-green-100\",\n        title: \"text-green-900\",\n        subText: \"text-green-700\",\n      };\n  }\n}\n\nexport function countTransactionCategories(\n  transactions: Transaction[]\n): CategoryCount[] {\n  const categoryCounts: { [category: string]: number } = {};\n  let totalCount = 0;\n\n  // Iterate over each transaction\n  transactions &&\n    transactions.forEach((transaction) => {\n      // Extract the category from the transaction\n      const category = transaction.category;\n\n      // If the category exists in the categoryCounts object, increment its count\n      if (categoryCounts.hasOwnProperty(category)) {\n        categoryCounts[category]++;\n      } else {\n        // Otherwise, initialize the count to 1\n        categoryCounts[category] = 1;\n      }\n\n      // Increment total count\n      totalCount++;\n    });\n\n  // Convert the categoryCounts object to an array of objects\n  const aggregatedCategories: CategoryCount[] = Object.keys(categoryCounts).map(\n    (category) => ({\n      name: category,\n      count: categoryCounts[category],\n      totalCount,\n    })\n  );\n\n  // Sort the aggregatedCategories array by count in descending order\n  aggregatedCategories.sort((a, b) => b.count - a.count);\n\n  return aggregatedCategories;\n}\n\nexport function extractCustomerIdFromUrl(url: string) {\n  // Split the URL string by '/'\n  const parts = url.split(\"/\");\n\n  // Extract the last part, which represents the customer ID\n  const customerId = parts[parts.length - 1];\n\n  return customerId;\n}\n\nexport function encryptId(id: string) {\n  return btoa(id);\n}\n\nexport function decryptId(id: string) {\n  return atob(id);\n}\n\nexport const getTransactionStatus = (date: Date) => {\n  const today = new Date();\n  const twoDaysAgo = new Date(today);\n  twoDaysAgo.setDate(today.getDate() - 2);\n\n  return date > twoDaysAgo ? \"Processing\" : \"Success\";\n};\n\nexport const authFormSchema = (type: string) => z.object({\n  // sign up\n  firstName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  lastName: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  address1: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  city: type === 'sign-in' ? z.string().optional() : z.string().max(50),\n  state: type === 'sign-in' ? z.string().optional() : z.string().min(2).max(2),\n  postalCode: type === 'sign-in' ? z.string().optional() : z.string().min(3).max(6),\n  dateOfBirth: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  ssn: type === 'sign-in' ? z.string().optional() : z.string().min(3),\n  // both\n  email: z.string().email(),\n  password: z.string().min(8),\n})"],"names":["webpackEmptyContext","req","e","code","keys","resolve","id","module","exports","wrappedServerComponent","dynamic","metadata","title","description","icons","icon","wrappedServerComponent$1","Proxy","children","_jsx","html","lang","body","className","inter","ibmPlexSerif","apply","originalFunction","thisArg","args","sentryTraceHeader","baggageHeader","headers","requestAsyncStore","next_dist_client_components_request_async_storage_external_js__WEBPACK_IMPORTED_MODULE_0__","requestAsyncStorage","getStore","_sentry_utils__WEBPACK_IMPORTED_MODULE_5__","h","_sentry_utils__WEBPACK_IMPORTED_MODULE_6__","x","_","_2","get","_3","undefined","_4","_5","_6","_7","_sentry_nextjs__WEBPACK_IMPORTED_MODULE_7__","wrapServerComponentWithSentry","componentRoute","componentType","serverComponentModule.default","generateMetadata","generateImageMetadata","generateViewport","Promise","then","__webpack_require__","bind","t","GlobalError","error","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Error","__WEBPACK_DEFAULT_EXPORT__","user","variant","router","useRouter","token","setToken","useState","useEffect","getLinkToken","data","createLinkToken","linkToken","onSuccess","useCallback","public_token","exchangePublicToken","publicToken","push","open","ready","usePlaidLink","Fragment","Button","onClick","disabled","jsxs","Image","src","alt","width","height","p","buttonVariants","cva","variants","default","destructive","outline","secondary","ghost","link","size","sm","lg","defaultVariants","React","asChild","props","ref","Comp","Slot","cn","displayName","inputs","twMerge","clsx","formatAmount","amount","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","format","formUrlQuery","params","key","value","currentUrl","qs","parse","stringifyUrl","url","window","location","pathname","query","skipNull","getAccountTypeColors","type","bg","lightBg","subText","decryptId","atob","authFormSchema","z","object","firstName","string","optional","min","lastName","address1","max","city","state","postalCode","dateOfBirth","ssn","email","password"],"sourceRoot":""}